---
import { render } from "@viole.in/md";
import { rehype } from "rehype";
import type { Root, Properties } from "hast";
import { visit } from "unist-util-visit";
const { content, _parent } = Astro.props;
const htmlString = await render(content.replaceAll("\ncollapsed:: true", ""));

interface Props {
  content: string;
  _parent?: Props[];
}

const rewriteImageUrl = () => {
  return (tree: Root) => {
    visit(tree, "element", function (node) {
      if (node.tagName === "img") {
        if (node.properties) {
          const src = node.properties.src;
          if (typeof src === "string")
            node.properties.src = `https://img.pi.viole.in${src
              .split("assets")
              .slice(1)}`;
        }
      }
    });
  };
};

const file = await rehype()
  .data("settings", {
    fragment: true,
  })
  .use(rewriteImageUrl)
  .process(htmlString);
---

<Fragment set:html={file} />
