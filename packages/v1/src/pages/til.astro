---
import Layout from "@/layouts/Layout.astro";
import { datascriptQuery, stringRules } from "@viole.in/logseq";
import { render } from "@viole.in/md";
import { Logseq } from "@viole.in/logseq/components";
import { groupBy } from "@/lib/ash";

const t = await render(`## today i learned`, true);

const model = `[
    :db/id
    {:block/left ...}
    :block/parent
    :block/content
    :block/properties
    {:block/page [:db/id :block/name :block/journal-day]}
    {:block/_parent ...}]`;

const pl = [
  `
  [
    :find (pull ?b ${model})
    :in $ % 
    :where (property ?b :til _)
  ]
`,
  `[${stringRules}]`,
];

const result = await datascriptQuery(pl).then((e) =>
  e
    .flat(Infinity)
    .toSorted((a, b) => b.page["journal-day"] - a.page["journal-day"]),
);
const groupByJournal = groupBy(result, (result) => result.page.name);
console.log(groupByJournal);
---

<Layout>
  <div set:html={t} />
  {
    result.map((el: any) => (
      <ul>
        <li>
          <p>
            <span>{el["page"]["name"]}</span>: <span>{el.properties.til}</span>
          </p>
          {el._parent ? <Logseq _parent={el._parent} /> : null}
        </li>
      </ul>
    ))
  }
</Layout>
