---
import Grid from "@/components/grid.astro";
import Cell from "@/components/cell.astro";
import Feat from "@/components/Feat.astro";
import { datascriptQuery } from "@/lib/log";

import "@fontsource/lexend-deca/variable.css";
import "@/styles/base.css";

const pl = (t) => [
  ` [:find (pull ?b [*])
    :where  [?b :block/parent ?parent]
    [?parent :block/properties ?prop]
    [(get ?prop :cv) ?v]
    [(= ?v "${t}")]
    [?parent :block/page ?page]
    [?page :block/name "cv"]
    ]
`,
];

const t = async (x) => {
  const v = await datascriptQuery(pl(x));
  return v.flat(Infinity).map((e) => ({ id: e.id, ...e.properties }));
};

const [[info], experience, project, education] = await Promise.all([
  t("info"),
  t("experiences"),
  t("personal project"),
  t("education"),
]);
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/font-et-book/0.1/et-book.min.css"
    />
    <title>cv</title>
    <link
      rel="icon"
      href={`data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>${"ðŸ“‹"}</text></svg>`}
    />
  </head>
  <body>
    <Grid columns={4} gap={12}>
      <Cell span="row">
        <h3>{info.name}</h3>
      </Cell>
      <Cell span="row">
        <div class="space">
          <a href={`https://${info.web}`}>https://{info.web}</a>
          <span>{info.mail}</span>
          <span>{info.phone}</span>
        </div>
      </Cell>
      <hr />
      <Cell span="row">
        <h3>Education</h3>
      </Cell>
      {
        education.map((e) => (
          <>
            <Cell span="1-2">
              <h4>{e.school}</h4>
            </Cell>
            <Cell span="3-4">{e.location}</Cell>
            <Cell span="1-3">
              {e.major}; GPA: {e.gpa}
            </Cell>
            <Cell span="4.."> {e.date}</Cell>
          </>
        ))
      }
      <hr />
      <Cell span="row">
        <h3>Experience</h3>
      </Cell>
      {
        experience.map((c) => (
          <Cell span="row">
            <Grid columns={4} gap={12}>
              <Cell span="1+1">
                <h4>
                  {c.title} @{" "}
                  <span class="bold">
                    <a href={`https://${c.link}`}>{c.company}</a>
                  </span>
                </h4>
              </Cell>
              <Cell span="3-4">
                {c.from} - {c.to}
              </Cell>
              <Cell span="row">
                <Feat id={c.id} />
              </Cell>
              <Cell span="row">
                <span class="italic">Technologies: {c.technologies}</span>
              </Cell>
            </Grid>
          </Cell>
        ))
      }

      <hr />
      <Cell span="row">
        <h3>Project</h3>
      </Cell>
      {
        project.map((c) => (
          <Cell span="row">
            <a class="bold" href={`https://${c.link}`}>
              {c.project}
            </a>
            : {c.details}
          </Cell>
        ))
      }
    </Grid>
  </body>
</html>

<style>
  body {
    /* size: A4; */
    width: 21cm;
    height: 29.7cm;
    margin: auto;
    background-color: white;
  }
  .bold {
    font-weight: 500;
  }
  .space > * + * {
    margin-left: 8px;
  }
  :global([data-span="3-4"], [data-span="4.."]) {
    text-align: right;
    align-self: end;
  }
</style>
